#Nombre del Workflow
name: CI/CD Pipeline
on:
  workflow_dispatch:
  #Iniciar el workflow al hacer push a la rama indicada
  push:
    branches:
      - realizar-solicitudes-servicios
jobs:
  #Tests job
  tests:
    name: Unit tests
    #Correr en una MV ubuntu en su última versión
    runs-on: ubuntu-latest
    #Pasos del Job
    steps:
      - uses: actions/checkout@v1
      #Set up JDK 17
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '17'
      #Set up Maven cache
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Run Tests
      - name: Run Tests
        run: mvn -B test

  #Build job
  build:
    #Depends on sonar's job
    needs: tests
    name: Build
    #Correr en una MV ubuntu en su última versión
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      #Set up JDK 17
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '17'
      #Set up Maven cache
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Build a la aplicación usando Maven
      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml
      - name: Upload JAR
        uses: actions/upload-artifact@v2
        with:
          #Set nombre del artefacto
          name: artifact
          #Lo extrae de esta ruta
          path: target/ssmu-api-0.0.1-SNAPSHOT.jar
